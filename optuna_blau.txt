best_trial: FrozenTrial(number=948, state=1, values=[0.6059731299927379], datetime_start=datetime.datetime(2023, 8, 2, 2, 44, 8, 204183), datetime_complete=datetime.datetime(2023, 8, 2, 2, 44, 8, 762365), params={'n_estimators1': 400, 'criterion1': 'entropy', 'max_features1': 7, 'max_depth1': 7, 'min_samples_split1': 48, 'min_samples_leaf1': 9, 'lambda2': 1.9258886117160787, 'alpha2': 0.08911786432796506, 'colsample_bytree2': 0.7, 'subsample2': 0.5, 'learning_rate2': 0.01, 'max_depth2': 5, 'random_state2': 2020, 'min_child_weight2': 287, 'n_estimators3': 82, 'max_depth3': 11, 'max_leaf_nodes3': 23, 'criterion3': 'entropy', 'lambda_l1': 0.00023412816543971724, 'lambda_l2': 0.0004733449436930184, 'num_leaves': 12, 'feature_fraction': 0.5959214512534062, 'bagging_fraction': 0.8339760397616774, 'bagging_freq': 6, 'min_child_samples': 50, 'shrink_threshold': 0.20307392705069444, 'classifier': 'LGBMClassifier'}, user_attrs={}, system_attrs={}, intermediate_values={}, distributions={'n_estimators1': IntDistribution(high=500, log=True, low=100, step=1), 'criterion1': CategoricalDistribution(choices=('log_loss', 'entropy', 'gini')), 'max_features1': IntDistribution(high=8, log=True, low=1, step=1), 'max_depth1': IntDistribution(high=30, log=True, low=5, step=1), 'min_samples_split1': IntDistribution(high=100, log=True, low=2, step=1), 'min_samples_leaf1': IntDistribution(high=10, log=True, low=1, step=1), 'lambda2': FloatDistribution(high=10.0, log=True, low=0.001, step=None), 'alpha2': FloatDistribution(high=10.0, log=True, low=0.001, step=None), 'colsample_bytree2': CategoricalDistribution(choices=(0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)), 'subsample2': CategoricalDistribution(choices=(0.4, 0.5, 0.6, 0.7, 0.8, 1.0)), 'learning_rate2': CategoricalDistribution(choices=(0.008, 0.01, 0.012, 0.014, 0.016, 0.018, 0.02)), 'max_depth2': CategoricalDistribution(choices=(5, 7, 9, 11, 13, 15, 17)), 'random_state2': CategoricalDistribution(choices=(2020,)), 'min_child_weight2': IntDistribution(high=300, log=False, low=1, step=1), 'n_estimators3': IntDistribution(high=120, log=False, low=50, step=1), 'max_depth3': IntDistribution(high=16, log=False, low=10, step=1), 'max_leaf_nodes3': IntDistribution(high=25, log=False, low=15, step=1), 'criterion3': CategoricalDistribution(choices=('gini', 'entropy')), 'lambda_l1': FloatDistribution(high=10.0, log=True, low=1e-08, step=None), 'lambda_l2': FloatDistribution(high=10.0, log=True, low=1e-08, step=None), 'num_leaves': IntDistribution(high=256, log=False, low=2, step=1), 'feature_fraction': FloatDistribution(high=1.0, log=False, low=0.4, step=None), 'bagging_fraction': FloatDistribution(high=1.0, log=False, low=0.4, step=None), 'bagging_freq': IntDistribution(high=7, log=False, low=1, step=1), 'min_child_samples': IntDistribution(high=100, log=False, low=5, step=1), 'shrink_threshold': FloatDistribution(high=1.0, log=False, low=0.0, step=None), 'classifier': CategoricalDistribution(choices=('NearestCentroid', 'XGBClassifier', 'RandomForestClassifier', 'ExtraTreesClassifier', 'LGBMClassifier'))}, trial_id=948, value=None)
best_params: {'n_estimators1': 400, 'criterion1': 'entropy', 'max_features1': 7, 'max_depth1': 7, 'min_samples_split1': 48, 'min_samples_leaf1': 9, 'lambda2': 1.9258886117160787, 'alpha2': 0.08911786432796506, 'colsample_bytree2': 0.7, 'subsample2': 0.5, 'learning_rate2': 0.01, 'max_depth2': 5, 'random_state2': 2020, 'min_child_weight2': 287, 'n_estimators3': 82, 'max_depth3': 11, 'max_leaf_nodes3': 23, 'criterion3': 'entropy', 'lambda_l1': 0.00023412816543971724, 'lambda_l2': 0.0004733449436930184, 'num_leaves': 12, 'feature_fraction': 0.5959214512534062, 'bagging_fraction': 0.8339760397616774, 'bagging_freq': 6, 'min_child_samples': 50, 'shrink_threshold': 0.20307392705069444, 'classifier': 'LGBMClassifier'}
best_value: 0.6059731299927379