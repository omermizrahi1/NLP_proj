best_trial: FrozenTrial(number=685, state=1, values=[0.5960421205519245], datetime_start=datetime.datetime(2023, 8, 2, 2, 5, 53, 64569), datetime_complete=datetime.datetime(2023, 8, 2, 2, 5, 53, 633629), params={'n_estimators1': 325, 'criterion1': 'entropy', 'max_features1': 7, 'max_depth1': 17, 'min_samples_split1': 20, 'min_samples_leaf1': 8, 'lambda2': 0.04858425914215013, 'alpha2': 0.05157192104023737, 'colsample_bytree2': 0.3, 'subsample2': 1.0, 'learning_rate2': 0.014, 'max_depth2': 13, 'random_state2': 2020, 'min_child_weight2': 59, 'n_estimators3': 61, 'max_depth3': 15, 'max_leaf_nodes3': 17, 'criterion3': 'entropy', 'lambda_l1': 0.004893349483550608, 'lambda_l2': 4.9057286797655025e-06, 'num_leaves': 135, 'feature_fraction': 0.4222655984454741, 'bagging_fraction': 0.9596169866175638, 'bagging_freq': 2, 'min_child_samples': 7, 'shrink_threshold': 0.3667633363933238, 'classifier': 'ExtraTreesClassifier'}, user_attrs={}, system_attrs={}, intermediate_values={}, distributions={'n_estimators1': IntDistribution(high=500, log=True, low=100, step=1), 'criterion1': CategoricalDistribution(choices=('log_loss', 'entropy', 'gini')), 'max_features1': IntDistribution(high=8, log=True, low=1, step=1), 'max_depth1': IntDistribution(high=30, log=True, low=5, step=1), 'min_samples_split1': IntDistribution(high=100, log=True, low=2, step=1), 'min_samples_leaf1': IntDistribution(high=10, log=True, low=1, step=1), 'lambda2': FloatDistribution(high=10.0, log=True, low=0.001, step=None), 'alpha2': FloatDistribution(high=10.0, log=True, low=0.001, step=None), 'colsample_bytree2': CategoricalDistribution(choices=(0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)), 'subsample2': CategoricalDistribution(choices=(0.4, 0.5, 0.6, 0.7, 0.8, 1.0)), 'learning_rate2': CategoricalDistribution(choices=(0.008, 0.01, 0.012, 0.014, 0.016, 0.018, 0.02)), 'max_depth2': CategoricalDistribution(choices=(5, 7, 9, 11, 13, 15, 17)), 'random_state2': CategoricalDistribution(choices=(2020,)), 'min_child_weight2': IntDistribution(high=300, log=False, low=1, step=1), 'n_estimators3': IntDistribution(high=120, log=False, low=50, step=1), 'max_depth3': IntDistribution(high=16, log=False, low=10, step=1), 'max_leaf_nodes3': IntDistribution(high=25, log=False, low=15, step=1), 'criterion3': CategoricalDistribution(choices=('gini', 'entropy')), 'lambda_l1': FloatDistribution(high=10.0, log=True, low=1e-08, step=None), 'lambda_l2': FloatDistribution(high=10.0, log=True, low=1e-08, step=None), 'num_leaves': IntDistribution(high=256, log=False, low=2, step=1), 'feature_fraction': FloatDistribution(high=1.0, log=False, low=0.4, step=None), 'bagging_fraction': FloatDistribution(high=1.0, log=False, low=0.4, step=None), 'bagging_freq': IntDistribution(high=7, log=False, low=1, step=1), 'min_child_samples': IntDistribution(high=100, log=False, low=5, step=1), 'shrink_threshold': FloatDistribution(high=1.0, log=False, low=0.0, step=None), 'classifier': CategoricalDistribution(choices=('NearestCentroid', 'XGBClassifier', 'RandomForestClassifier', 'ExtraTreesClassifier', 'LGBMClassifier'))}, trial_id=685, value=None)
best_params: {'n_estimators1': 325, 'criterion1': 'entropy', 'max_features1': 7, 'max_depth1': 17, 'min_samples_split1': 20, 'min_samples_leaf1': 8, 'lambda2': 0.04858425914215013, 'alpha2': 0.05157192104023737, 'colsample_bytree2': 0.3, 'subsample2': 1.0, 'learning_rate2': 0.014, 'max_depth2': 13, 'random_state2': 2020, 'min_child_weight2': 59, 'n_estimators3': 61, 'max_depth3': 15, 'max_leaf_nodes3': 17, 'criterion3': 'entropy', 'lambda_l1': 0.004893349483550608, 'lambda_l2': 4.9057286797655025e-06, 'num_leaves': 135, 'feature_fraction': 0.4222655984454741, 'bagging_fraction': 0.9596169866175638, 'bagging_freq': 2, 'min_child_samples': 7, 'shrink_threshold': 0.3667633363933238, 'classifier': 'ExtraTreesClassifier'}
best_value: 0.5960421205519245